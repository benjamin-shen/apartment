rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function emailVerified() {
    	return request.auth != null && request.auth.token.email_verified;
    }
    function isUser() {
    	return request.auth.uid in get(/databases/$(database)/documents/app/info).data.uids;
    }
    function notThrottled(doc) {
      return request.time >= get(/databases/$(database)/documents/log/$(doc)).data.lastUpdatedDoorbell + duration.value(1, 'm');
    }
    
    match /log/{document=**} {
      allow read: if emailVerified() && isUser();
      allow create: if emailVerified();
    }
    match /log/{month}/{collection=**} {
      allow write: if notThrottled(month);
    }
    
    match /app/info/{collection=**} {
    	allow read: if emailVerified();
      allow write: if emailVerified() && isUser();
    }
    
    match /app/private/{collection=**} {
    	allow read, write: if emailVerified() && isUser();
    }
  }
}
